---
import { getCollection } from "astro:content";
import { basename } from "node:path";

const posts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

const currentIndex = posts.findIndex((post) => {
  return basename(Astro.url.pathname) === post.slug;
});

const nextPost = posts[currentIndex + 1];
const prevPost = posts[currentIndex - 1];
---

<aside class="flex flex-col sm:flex-row mt-10 gap-4 w-full">
  {
    nextPost && (
      <a
        href={`/blog/${nextPost.slug}/`}
        class="group flex-1 text-sm flex flex-col grow p-4 rounded-lg border border-stone-300 dark:border-stone-700 dark:hover:border-stone-400 hover:border-stone
        -300 transition-all dark:hover:bg-stone-600/20 hover:bg-stone-100 hover:text-stone-800 hover:border-stone-500 hover:bg-stone-600/20"
      >
        <p class="mb-1 dark:text-stone-300 text-stone-700">
          &larr; Previous post
        </p>
        <p class="font-semibold dark:text-stone-300 text-stone-700">
          {nextPost.data.title}
        </p>
      </a>
    )
  }
  {
    prevPost && (
      <a
        href={`/blog/${prevPost.slug}/`}
        class="group flex-1 text-sm flex flex-col text-right grow p-4 rounded-lg border border-stone-300 dark:border-stone-700 dark:hover:border-stone-400 hover:border-stone
        -300 transition-all dark:hover:bg-stone-600/20 hover:bg-stone-100 hover:text-stone-800 hover:border-stone-500 hover:bg-stone-600/20"
      >
        <p class="mb-1 dark:text-stone-300 text-stone-700">Next post &rarr;</p>
        <p class="font-semibold dark:text-stone-300 text-stone-700">
          {prevPost.data.title}
        </p>
      </a>
    )
  }
</aside>
